load("@rules_cc//cc:defs.bzl", "cc_test")

###
# Cores Library
###

# Library
cc_library(
  name = "cores",
  hdrs = [
    "cores.h",
  ],
  srcs = [
    "port.h",
    "bus.h",
    "signal.h",
    "input.h",
    "output.h",
    "input-bus.h",
    "output-bus.h",
    "input-signal.h",
    "output-signal.h",
    # "clock.h",
    # "reset.h",
    "design.h",
    "combinatorial-design.h",
    "clocked-design.h",

    "design-test.h",
    "combinatorial-design-test.h",
    "clocked-design-test.h",

    "input-signal.cc",
    "output-signal.cc",
    # "clock.cc",
    # "reset.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
  ],
  alwayslink = True,
  visibility = ["//visibility:public"],
)

# Test Fixtures
cc_library(
  name = "cores-fixtures",
  hdrs = [
    "test-input-bus.h",
    "test-output-bus.h",
    "test-input-signal.h",
    "test-output-signal.h",
    # "test-clock.h",
    # "test-reset.h",
  ],
  srcs = [
    "test-input-bus.cc",
    "test-output-bus.cc",
    "test-input-signal.cc",
    "test-output-signal.cc",
    # "test-clock.cc",
    # "test-reset.cc",
  ],
  deps = [
    ":cores",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Test Library
cc_library(
  name = "cores-unit-tests",
  hdrs = [
    "input-bus-test.h",
    "output-bus-test.h",
    "input-signal-test.h",
    "output-signal-test.h",
    # "clock-test.h",
    # "reset-test.h",
  ],
  srcs = [
    "input-bus-test.cc",
    "output-bus-test.cc",
    "input-signal-test.cc",
    "output-signal-test.cc",
    # "clock-test.cc",
    # "reset-test.cc",
  ],
  alwayslink = True,
  deps = [
    ":cores",
    ":cores-fixtures",
  ],
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "cores-unit-test",
  srcs = [
    "cores-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":cores-fixtures",
    ":cores-unit-tests",
  ],
  linkstatic = True,
  visibility = ["//visibility:private"],
)

###
# Verilated Cores Library
###

# Verilator Library
cc_library(
  name = "verilated",
  hdrs = [
    "verilated.h",
  ],
  srcs = [
    "verilated-input-bus.h",
    "verilated-output-bus.h",
    "verilated-input-signal.h",
    "verilated-output-signal.h",
    "verilated-clock.h",
    "verilated-reset.h",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
  ],
  visibility = ["//visibility:public"],
)

# Unit Test Fixtures
cc_library(
  name = "verilated-fixtures",
  hdrs = [

  ],
  srcs = [

  ],
  deps = [
    ":cores",
    ":verilated",
  ],
  visibility = ["//visibility:private"],
)

# Unit Test Library
cc_library(
  name = "verilated-unit-tests",
  hdrs = [
    "verilated-input-bus-test.h",
    "verilated-output-bus-test.h",
  ],
  srcs = [

  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":verilated",
    ":verilated-fixtures",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "verilated-unit-test",
  srcs = [
    "verilated-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":verilated",
    ":verilated-fixtures",
    ":verilated-unit-tests",
  ],
  visibility = ["//visibility:private"],
)

###
# Device Library
###

# Device Library
cc_library(
  name = "device",
  hdrs = [
    "device.h",
  ],
  srcs = [
    "device-input-bus.h",
    "device-output-bus.h",
    "device-input-signal.h",
    "device-output-signal.h",
    "device-clock.h",
    "device-reset.h",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
  ],
  visibility = ["//visibility:public"],
)

# Unit Test Fixtures
cc_library(
  name = "device-fixtures",
  hdrs = [

  ],
  srcs = [

  ],
  deps = [
    ":cores",
    ":device",
  ],
  visibility = ["//visibility:private"],
)

# Unit Test Library
cc_library(
  name = "device-unit-tests",
  hdrs = [
    "device-input-bus-test.h",
    "device-output-bus-test.h",
    "device-input-signal-test.h",
    "device-output-signal-test.h",
  ],
  srcs = [

  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":device",
    ":device-fixtures",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "device-unit-test",
  srcs = [
    "device-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":device",
    ":device-fixtures",
    ":device-unit-tests",
  ],
  visibility = ["//visibility:private"],
)
