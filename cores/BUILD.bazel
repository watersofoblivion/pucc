load("@rules_verilog//verilog:defs.bzl", "verilog_module")
load("@rules_verilator//verilator:defs.bzl", "verilator_cc_library")
load("@rules_cc//cc:defs.bzl", "cc_test")

###
# Cores Library
###

# Library
cc_library(
  name = "cores",
  hdrs = [
    "cores.h",
  ],
  srcs = [
    "port.h",
    "bus.h",
    "signal.h",
    "input.h",
    "output.h",
    "input-bus.h",
    "output-bus.h",
    "input-signal.h",
    "output-signal.h",
    "design.h",
    "combinatorial-design.h",
    "clocked-design.h",
    "design-test.h",
    "combinatorial-design-test.h",
    "clocked-design-test.h",
    "input-signal.cc",
    "output-signal.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
  ],
  alwayslink = True,
  visibility = ["//visibility:public"],
)

# Test Fixtures
cc_library(
  name = "cores-fixtures",
  hdrs = [
    "test-input-bus.h",
    "test-output-bus.h",
    "test-input-signal.h",
    "test-output-signal.h",
  ],
  srcs = [
    "test-input-bus.cc",
    "test-output-bus.cc",
    "test-input-signal.cc",
    "test-output-signal.cc",
  ],
  deps = [
    ":cores",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Test Library
cc_library(
  name = "cores-unit-tests",
  hdrs = [
    "input-bus-test.h",
    "output-bus-test.h",
    "input-signal-test.h",
    "output-signal-test.h",
  ],
  srcs = [
    "input-bus-test.cc",
    "output-bus-test.cc",
    "input-signal-test.cc",
    "output-signal-test.cc",
  ],
  alwayslink = True,
  deps = [
    ":cores",
    ":cores-fixtures",
  ],
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "cores-unit-test",
  srcs = [
    "cores-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":cores-fixtures",
    ":cores-unit-tests",
  ],
  linkstatic = True,
  visibility = ["//visibility:private"],
)

###
# Verilated Cores Library
###

# Verilator Library
cc_library(
  name = "verilated",
  hdrs = [
    "verilated.h",
  ],
  srcs = [
    "verilated-port.h",
    "verilated-bus.h",
    "verilated-signal.h",
    "verilated-input.h",
    "verilated-output.h",
    "verilated-input-bus.h",
    "verilated-output-bus.h",
    "verilated-input-signal.h",
    "verilated-output-signal.h",
    "verilated-design.h",
    "verilated-combinatorial-design.h",
    "verilated-clocked-design.h",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
  ],
  visibility = ["//visibility:public"],
)

# Unit Test Fixtures
verilog_module(
  name = "verilated-fixture-module",
  srcs = ["VerilatedFixtures.sv"],
  top = "VerilatedFixtures",
)

verilator_cc_library(
  name = "verilated-fixtures",
  module = ":verilated-fixture-module",
  visibility = ["//visibility:private"]
)

# Unit Test Library
cc_library(
  name = "verilated-unit-tests",
  hdrs = [
    "verilated-input-bus-test.h",
    "verilated-output-bus-test.h",
    "verilated-input-signal-test.h",
    "verilated-output-signal-test.h",
  ],
  srcs = [
    "verilated-input-bus-test.cc",
    "verilated-output-bus-test.cc",
    "verilated-input-signal-test.cc",
    "verilated-output-signal-test.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":verilated",
    ":verilated-fixtures",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "verilated-unit-test",
  srcs = [
    "verilated-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":verilated",
    ":verilated-fixtures",
    ":verilated-unit-tests",
  ],
  visibility = ["//visibility:private"],
)

###
# Device Library
###

# Device Library
cc_library(
  name = "device",
  hdrs = [
    "device.h",
  ],
  srcs = [
    "device-port.h",
    "device-bus.h",
    "device-signal.h",
    "device-input.h",
    "device-output.h",
    "device-input-bus.h",
    "device-output-bus.h",
    "device-input-signal.h",
    "device-output-signal.h",
    "device-design.h",
    "device-combinatorial-design.h",
    "device-clocked-design.h",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
  ],
  visibility = ["//visibility:public"],
)

# Unit Test Fixtures
cc_library(
  name = "device-fixtures",
  hdrs = [

  ],
  srcs = [

  ],
  deps = [
    ":cores",
    ":device",
  ],
  visibility = ["//visibility:private"],
)

# Unit Test Library
cc_library(
  name = "device-unit-tests",
  hdrs = [
    "device-input-bus-test.h",
    "device-output-bus-test.h",
    "device-input-signal-test.h",
    "device-output-signal-test.h",
  ],
  srcs = [
    "device-input-bus-test.cc",
    "device-output-bus-test.cc",
    "device-input-signal-test.cc",
    "device-output-signal-test.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":device",
    ":device-fixtures",
  ],
  alwayslink = True,
  visibility = ["//visibility:private"],
)

# Unit Tests
cc_test(
  name = "device-unit-test",
  srcs = [
    "device-unit-test-main.cc",
  ],
  deps = [
    "@com_google_googletest//:gtest",
    ":cores",
    ":device",
    ":device-fixtures",
    ":device-unit-tests",
  ],
  visibility = ["//visibility:private"],
)
